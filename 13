#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <signal.h>
#include <sched.h>

// Variable global utilizada para determinar si se debe borrar el programa
volatile int borrar = 1;

// Manejador de señales
void handler(int signal) {
    if (signal == SIGUSR1) {
        borrar = 0;
        printf("Se ha recibido la señal SIGUSR1\n");
    } else {
        printf("La alarma ha sonado\n");
    }
}

int main(int argc, char *argv[]) {
    // Verificar que se proporcionen suficientes argumentos
    if (argc < 2) {
        printf("Error: pocos argumentos\n");
        return -1;
    }

    // Configurar la acción para la señal SIGUSR1
    struct sigaction sigact;
    alarm(atoi(argv[2]));  // Establecer una alarma para el tiempo especificado
    signal(SIGALRM, handler);  // Configurar el manejador de señales para SIGALRM
    sigaction(SIGUSR1, NULL, &sigact);
    sigact.sa_handler = handler;
    sigaction(SIGUSR1, &sigact, NULL);

    // Configurar el conjunto de señales para la función sigsuspend
    sigset_t set;
    sigfillset(&set);
    sigdelset(&set, SIGALRM);  // Llenar con todas las señales y quitar SIGALRM

    printf("Se suspenderá durante %i segundos\n", atoi(argv[1]));

    // Suspender el proceso hasta que llegue una señal
    sigsuspend(&set);

    // Verificar si se debe borrar el programa
    if (borrar == 1) {
        printf("Se va a borrar el ejecutable\n");

        // Borrar el ejecutable (eliminar el archivo)
        unlink(argv[1]);
        return 0;
    } else {
        printf("No se va a borrar el ejecutable\n");
    }

    return 0;
}

