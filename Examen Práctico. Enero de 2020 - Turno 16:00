3.RECUERDA: char *cmd1[]={argv[1],argv[2],NULL}, execvp(cmd2[0],cmd2);, char *cmd2[]={argv[3],argv[4],NULL};
#include <sys/types.h>
#include <sys/wait.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>

int
main(int argc, char *argv[])
{
    char *cmd1[]={argv[1],argv[2],NULL};
    char *cmd2[]={argv[3],argv[4],NULL};
    int pipefd[2];
    pid_t cpid;
    char buf;
    pipe(pipefd);
    cpid = fork();
    if(cpid==0)
    {
        close(pipefd[1]);
        // Redirigir la entrada estándar al descriptor de lectura de la tubería
        printf("soy: %d\n",getpid());
        dup2(pipefd[0], STDIN_FILENO);
        close(pipefd[0]);
        execvp(cmd2[0],cmd2);
        exit(EXIT_SUCCESS);

    }
    else{
        printf("soy: %d\n",getpid());
        close(pipefd[0]);
        dup2(pipefd[1], STDIN_FILENO);
        close(pipefd[1]);
        execvp(cmd1[0],cmd1);
        exit(EXIT_SUCCESS);
    }
    return 0;
}
