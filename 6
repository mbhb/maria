
#include <stdio.h>
#include <sys/types.h>
#include <unistd.h>
#include <sys/time.h>
#include <sys/resource.h>
#include <stdlib.h>
#include <sys/types.h>
#include <unistd.h>


void atributos();

int main(){
    pid_t pid= fork();
    switch(pid){
        case 0:
        setsid();
        chdir("/tmp");
        atributos();
            break;
        case -1:
            break;
        default:
        atributos();
        sleep(10);
            break;
    }
}


void atributos(){
int pid, ppid, pgid, sid;
pid=getpid();
ppid=getppid();
pgid=getpgid(pid);
sid=getsid(pid);
printf("pid %d, ppid %d, pgid %d, sid %d\n",pid, ppid, pgid, sid );

struct rlimit lm;
getrlimit(RLIMIT_NOFILE,&lm);
int max_ficheros;
max_ficheros= lm.rlim_max;
printf("max_ficheros:  %d\n",max_ficheros);

char  *buf=malloc(500);
getcwd(buf,200);
printf("directorio:  %s\n",buf);
free(buf);
}



Cuando el proceso padre termina antes que el hijo, el hijo generalmente se "reempareja" con el proceso init 
(con PID 1 en sistemas Unix/Linux). El proceso init adopta el proceso hijo huérfano y se convierte en su padre. 
El nuevo valor de PPID del proceso hijo será 1.
